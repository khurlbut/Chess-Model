<?xml version="1.0" encoding="UTF-8"?><testrun name="Rerun model.board.BackingMapTest" project="Model" tests="15" started="0" failures="0" errors="1" ignored="0">
  <testsuite name="model.board.BackingMapTest" incomplete="true">
    <error>org.mockito.exceptions.base.MockitoException: 
Cannot mock/spy class model.Piece
Mockito cannot mock/spy following:
  - final classes
  - anonymous classes
  - primitive types
	at org.mockito.internal.runners.JUnit45AndHigherRunnerImpl$1.withBefores(JUnit45AndHigherRunnerImpl.java:27)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:254)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.mockito.internal.runners.JUnit45AndHigherRunnerImpl.run(JUnit45AndHigherRunnerImpl.java:37)
	at org.mockito.runners.MockitoJUnitRunner.run(MockitoJUnitRunner.java:62)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)

</error>
    <testcase name="illegalArgumentException_is_thrown_when_an_attemp_is_made_to_move_to_an_occupied_square" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="illegalArgumentException_is_thrown_when_attempting_to_set_a_piece_on_a_square_that_is_occupied_by_the_same_piece" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="illegalArgumentException_is_thrown_when_an_attemp_is_made_to_move_to_the_same_square" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="it_returns_the_square_holding_a_piece" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="it_can_replace_the_piece_on_square2_with_the_piece_on_square1" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="illegalArgumentException_is_thrown_when_an_attempt_is_made_to_remove_from_an_empty_square" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="illegalArgumentException_is_thrown_when_an_attempt_is_made_to_replace_from_an_empty_square" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="illegalArgumentException_is_thrown_when_attempting_to_set_a_piece_on_a_square_that_is_occupied_by_a_new_piece" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="illegalArgumentException_is_thrown_when_an_attemp_is_made_to_a_piece_in_twice" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="it_remembers_previous_pieces_when_a_new_piece_is_set" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="it_returns_the_piece_set_on_a_square" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="illegalArgumentException_is_thrown_when_an_attempt_is_made_to_replace_on_an_empty_square" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="it_returns_null_when_for_an_empty_square" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="it_can_move_a_piece_from_square1_to_square2" classname="model.board.BackingMapTest" incomplete="true"/>
    <testcase name="illegalArgumentException_is_thrown_when_an_attempt_is_made_to_move_from_an_empty_square" classname="model.board.BackingMapTest" incomplete="true"/>
  </testsuite>
</testrun>
