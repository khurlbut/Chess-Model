package strategy;

import model.ChessPiece;
import model.Piece;
import model.board.ChessBoard;
import model.board.PutEvent;
import model.board.Square;
import model.enums.Color;
import model.enums.Column;
import model.enums.Rank;
import model.enums.Row;

import org.junit.Test;


public class BruteForceGameStrategyTest {

    @Test
    public void test() {
        ChessBoard chessBoard = new ChessBoard();

        Square a_2 = new Square(Column.A, Row.R2);
        Square h_2 = new Square(Column.H, Row.R2);
        Square b_7 = new Square(Column.B, Row.R7);

        Piece w_pawn_a = new ChessPiece(Rank.Pawn, Color.WHITE, a_2);
        Piece w_pawn_h = new ChessPiece(Rank.Pawn, Color.WHITE, h_2);
        Piece b_pawn_b = new ChessPiece(Rank.Pawn, Color.BLACK, b_7);

        PutEvent put_w_pawn_a = new PutEvent(w_pawn_a);
        PutEvent put_w_pawn_h = new PutEvent(w_pawn_h);
        PutEvent put_b_pawn_b = new PutEvent(b_pawn_b);

        chessBoard = chessBoard.playEvent(put_w_pawn_a).playEvent(put_w_pawn_h).playEvent(put_b_pawn_b);

        new BruteForceGameStrategy().nextMove(Color.WHITE, chessBoard);
        
        MoveEvent bestMove = new MoveEvent(w_pawn_a, a_4);
    }

}
